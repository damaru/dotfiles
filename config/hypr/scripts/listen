#!/usr/bin/env python3

import socket
import sys 
import time
import os
import json



def hyprctl(command):
    try:
        return json.loads(os.popen(f'hyprctl -j {command}').read())
    except Exception as e:
        print(e)
        return {Exception: e}


# https://wiki.hyprland.org/IPC/
def handle_events(event,args):
    if event == 'closewindow':
        print('Window closed', args)
        active = hyprctl('activewindow')
        if active:
            active = active['workspace']['id']
        else:
            active = None
        if active == None:
            print('CLOSING to NEXT WS')
            print(hyprctl('dispatch workspace previous'))
            return
        wslist = hyprctl('workspaces')
        print('active', active)
        print('list', wslist)
        for ws in wslist:
            if ws['id'] == active:
                count = ws['windows']
                print('count',count)
                if count == 0:
                    print('CLOSING to NEXT WS')
                    print(hyprctl('dispatch workspace previous'))
                    return

with socket.socket(socket.AF_UNIX, socket.SOCK_STREAM) as client:
    client.connect(f"{os.environ['XDG_RUNTIME_DIR']}/hypr/{os.environ['HYPRLAND_INSTANCE_SIGNATURE']}/.socket2.sock");

    while True:
        #client.send(b"Client 1: hi\n")
        line = client.recv(1024).decode().split('\n')[0]
        event,args = line.split('>>')
        handle_events(event,args)
        try:
            handle_events(event,args)
        except Exception as e:
            print(e)
            pass
        time.sleep(0.1)

    client.close()
